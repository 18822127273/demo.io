{"version":3,"file":"js/9855.5f4e0e38.js","mappings":"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","sources":["webpack://demo/./src/components/fullscreen/3dtiles.vue","webpack://demo/./src/assets/js/cusium.js","webpack://demo/./src/assets/js/MeasureManager.js","webpack://demo/src/components/fullscreen/3dtiles.vue","webpack://demo/./src/components/fullscreen/3dtiles.vue?7f44","webpack://demo/./src/components/fullscreen/3dtiles.vue?6f2c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"full\"},[_c('dv-border-box-13',[_c('div',{staticClass:\"amap-wrapper\"},[_c('div',{attrs:{\"id\":\"cesiumDemo\"}}),_c('transition',{attrs:{\"name\":\"el-fade-in-linear\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.buildMessageBoxShow),expression:\"buildMessageBoxShow\"}],staticClass:\"buildMessageBox messageBox\"},[_c('div',{staticClass:\"topLine\"}),_c('div',{staticClass:\"slantLine\"}),_c('div',{staticClass:\"title\"},[_c('span',{staticClass:\"messageBoxTit\"},[_vm._v(_vm._s(_vm.name))])]),_c('div',{staticClass:\"contList\"},[_c('span',{staticClass:\"messageBoxTit\"},[_vm._v(\"楼栋数：\")]),_c('span',{staticClass:\"messageVal\"},[_vm._v(\"80\")])]),_c('div',{staticClass:\"contList\"},[_c('span',{staticClass:\"messageBoxTit\"},[_vm._v(\"户数：\")]),_c('span',{staticClass:\"messageVal\"},[_vm._v(\"314\")])]),_c('div',{staticClass:\"contList\"},[_c('span',{staticClass:\"messageBoxTit\"},[_vm._v(\"人数：\")]),_c('span',{staticClass:\"messageVal\"},[_vm._v(\"1149\")])]),_c('div',{staticClass:\"contList\"},[_c('span',{staticClass:\"messageBoxTit\"},[_vm._v(\"党员数：\")]),_c('span',{staticClass:\"messageVal\"},[_vm._v(\"124人\")])])])])],1),_c('div',{staticStyle:{\"position\":\"absolute\",\"left\":\"10px\"}},[_c('back-button')],1),_c('div',{staticClass:\"btnContainer\"},[_c('button',{on:{\"click\":function($event){return _vm.draw('Polyline')}}},[_vm._v(\"标点测距\")]),_c('button',{on:{\"click\":function($event){return _vm.draw('Polygon')}}},[_vm._v(\"标点测面\")]),_c('button',{on:{\"click\":function($event){return _vm.clearAllDrawn()}}},[_vm._v(\"清空数据\")]),_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"点击按钮后，在场景内单击左键标点，单击右键结束测量。\")]),_c('p',[_vm._v(\"点击“标点测距”按钮后在场景内单击鼠标左键加点，在两点间显示距离，单击右键结束测量。\")]),_c('p',[_vm._v(\"点击“标点测面”按钮后在场景内单击鼠标左键加点，单击右键在勾出的范围中显示面积。\")]),_c('p',[_vm._v(\"点击“清空数据”按钮删除所有数据。\")])])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// cesium模型摄影代码封装\r\nexport function set3Dtitle2(viewer) {\r\n\tlet translation = Cesium.Cartesian3.fromArray([0, 0, -170])\r\n\tlet m = Cesium.Matrix4.fromTranslation(translation)\r\n\tlet palaceTileset = new Cesium.Cesium3DTileset({\r\n\t\t// url: '../static/Data/tileset.json',\r\n\t\t // url: Cesium.IonResource.fromAssetId(1602458),\r\n\t\turl: 'http://localhost:9003/model/WktjX1Mi/tileset.json',\r\n\t\tmodelMatrix: m,\r\n\t\tmaximumScreenSpaceError: 64, // 默认16\r\n\t\tmaximumMemoryUsage: 512, // 内存分配变小有利于倾斜摄影数据回收，提升性能体验\r\n\t\tdynamicScreenSpaceErrorDensity: 1, // 数值加大，能让周边加载变快\r\n\t})\r\n\t//添加到场景\r\n\tviewer.scene.primitives.add(palaceTileset);\r\n\tviewer.scene.sun.show = false;\r\n\tviewer.scene.skyBox.show = false;\r\n\tviewer.scene.screenSpaceCameraController.minimumZoomDistance = 50;//最小缩放\r\n\t// 去除logo\r\n\tviewer.cesiumWidget.creditContainer.style.display = \"none\";\r\n\r\n\t//控制模型的位置\r\n\tpalaceTileset.readyPromise.then(function(palaceTileset) {\r\n\t\tviewer.scene.primitives.add(palaceTileset);\r\n\t\tvar heightOffset = 10; //可以改变3Dtiles的高度\r\n\t\tvar boundingSphere = palaceTileset.boundingSphere;\r\n\t\tvar cartographic = Cesium.Cartographic.fromCartesian(boundingSphere.center);\r\n\t\tvar surface = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0.0);\r\n\t\tvar offset = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, heightOffset);\r\n\t\tvar translation = Cesium.Cartesian3.subtract(offset, surface, new Cesium.Cartesian3());\r\n\t\tpalaceTileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation);\r\n\t\tviewer.zoomTo(palaceTileset, new Cesium.HeadingPitchRange(0.5, -0.2, palaceTileset.boundingSphere\r\n\t\t\t.radius *\r\n\t\t\t1.0));\r\n\t});\r\n\t//定位到三维模型\r\n\tviewer.zoomTo(palaceTileset)\r\n}\r\n//单点值\r\nexport function lablelist(viewer, data, a) {\r\n\t//添加点位\r\n\t// fromDegrees（经度，纬度，高度，椭球，结果）从以度为单位的经度和纬度值返回Cartesian3位置\r\n\tviewer.entities.add({\r\n\t\tposition: Cesium.Cartesian3.fromDegrees(data[a].x, data[a].y, data[\r\n\t\t\ta].z),\r\n\t\t// 文字\r\n\t\tlabel: {\r\n\t\t\t// 文本。支持显式换行符“ \\ n”\r\n\t\t\ttext: data[a].Text,\r\n\t\t\t// 字体样式，以CSS语法指定字体\r\n\t\t\tfont: '14pt Source Han Sans CN',\r\n\t\t\t// 字体颜色\r\n\t\t\tfillColor: Cesium.Color.WHITE,\r\n\t\t\t// 背景颜色\r\n\t\t\tbackgroundColor: Cesium.Color.BLUE,\r\n\t\t\t// 是否显示背景颜色\r\n\t\t\tshowBackground: true,\r\n\t\t\t// 字体边框\r\n\t\t\toutline: true,\r\n\t\t\t// 字体边框颜色\r\n\t\t\toutlineColor: Cesium.Color.WHITE,\r\n\t\t\t// 字体边框尺寸\r\n\t\t\toutlineWidth: 2,\r\n\t\t\t// 应用于图像的统一比例。比例大于会1.0放大标签，而比例小于会1.0缩小标签。\r\n\t\t\tscale: 1.0,\r\n\t\t\t// 设置样式：FILL：填写标签的文本，但不要勾勒轮廓；OUTLINE：概述标签的文本，但不要填写；FILL_AND_OUTLINE：填写并概述标签文本。\r\n\t\t\tstyle: Cesium.LabelStyle.FILL_AND_OUTLINE,\r\n\t\t\t// 相对于坐标的水平位置\r\n\t\t\tverticalOrigin: Cesium.VerticalOrigin.CENTER,\r\n\t\t\t// 相对于坐标的水平位置\r\n\t\t\thorizontalOrigin: Cesium.HorizontalOrigin.LEFT,\r\n\t\t\t// 该属性指定标签在屏幕空间中距此标签原点的像素偏移量\r\n\t\t\tpixelOffset: new Cesium.Cartesian2(10, 0),\r\n\t\t\t// 显示在距相机的距离处的属性，多少区间内是可以显示的\r\n\t\t\tdistanceDisplayCondition: new Cesium.DistanceDisplayCondition(0, 1000),\r\n\t\t\t// 是否显示\r\n\t\t\tshow: true\r\n\t\t}\r\n\t});\r\n}\r\n// 楼栋柱体实体\r\nexport function cylinderModel(viewer, building, data) {\r\n\tviewer.entities.add({\r\n\t\tid: building[data].id,\r\n\t\tname: '{\"cesiumType\": \"cylinderBuilding\"}',\r\n\t\tposition: Cesium.Cartesian3.fromDegrees(building[data].x, building[data].y, 10),\r\n\t\torientation: Cesium.Transforms.headingPitchRollQuaternion(\r\n\t\t\tnew Cesium.Cartesian3.fromDegrees(building[data].x, building[data].y, 10),\r\n\t\t\tnew Cesium.HeadingPitchRoll(Cesium.Math.toRadians(140), Cesium.Math.toRadians(0), Cesium.Math\r\n\t\t\t\t.toRadians(0))\r\n\t\t),\r\n\t\tcylinder: {\r\n\t\t\tlength: 50, // 圆柱体高度\r\n\t\t\ttopRadius: 100, // 圆柱体顶部半径\r\n\t\t\tbottomRadius: 100, // 圆柱体底部半径\r\n\t\t\tmaterial: Cesium.Color.fromCssColorString('rgba(255,255,255,0.01)'), // 材质\r\n\t\t\t// material: Cesium.Color.fromCssColorString('rgba(255, 255, 255, 1)'), // 材质\r\n\t\t\tslices: 100, // 圆柱周围圆圈分段数\r\n\t\t\tnumberOfVerticalLines: 100 // 圆柱垂直线分段数\r\n\t\t}\r\n\t}, )\r\n\r\n}\n","/* cesium空间两点距离计算函数 */\r\n export function getLength(start, end) {\r\n   // 将起点与终点位置信息从笛卡尔坐标形式转换为Cartographic形式\r\n   let startCartographic = Cesium.Cartographic.fromCartesian(start)\r\n   let endCartographic = Cesium.Cartographic.fromCartesian(end)\r\n   // 初始化测地线\r\n   let geodesic = new Cesium.EllipsoidGeodesic()\r\n   // 设置测地线起点和终点，EllipsoidGeodesic中setEndPoints常与surfaceDistance搭配使用\r\n   geodesic.setEndPoints(startCartographic, endCartographic)\r\n   // 获取起点和终点之间的表面距离，单位为km，规定四舍五入保留两位小数\r\n   // surfaceDistance返回number 单位为m，带小数\r\n   // console.log((geodesic.surfaceDistance / 1000).toFixed(2))\r\n   return (geodesic.surfaceDistance / 1000).toFixed(2)\r\n }\r\n /* 空间两点计算中点函数 */\r\n export function getMidpoint(start, end) {\r\n   let startPoint = Cesium.Cartographic.fromCartesian(start)\r\n   let endPoint = Cesium.Cartographic.fromCartesian(end)\r\n   let geodesic = new Cesium.EllipsoidGeodesic()\r\n   geodesic.setEndPoints(startPoint, endPoint)\r\n   let geoPoint = geodesic.interpolateUsingFraction(0.5)\r\n   // console.log(Cesium.Ellipsoid.WGS84.cartographicToCartesian(geoPoint))\r\n   return Cesium.Ellipsoid.WGS84.cartographicToCartesian(geoPoint)\r\n }\r\n export function addLabel(viewer,midPoint, labelLength) {\r\n   // let viewer = this.viewer\r\n\n   let box= viewer.entities.add({\r\n     name: '中点',\r\n     position: midPoint,\r\n     label: {\r\n       text: labelLength + 'km',\r\n       font: '20px sans-serif',\r\n       fillColor: Cesium.Color.WHITE,\r\n       outlineWidth: 2,\r\n       backgroundColor: Cesium.Color.BLACK,\r\n       showBackground: true,\r\n       style: Cesium.LabelStyle.FILL,\r\n       verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n       horizontalOrigin: Cesium.HorizontalOrigin.CENTER,\r\n       heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\r\n       disableDepthTestDistance: Number.POSITIVE_INFINITY\r\n     }\r\n   })\n   return box\r\n }\r\n export function Bearing(from, to) {\r\n   let fromCartographic = Cesium.Cartographic.fromCartesian(from)\r\n   let toCartographic = Cesium.Cartographic.fromCartesian(to)\r\n   let lat1 = fromCartographic.latitude\r\n   let lon1 = fromCartographic.longitude\r\n   let lat2 = toCartographic.latitude\r\n   let lon2 = toCartographic.longitude\r\n   let angle = -Math.atan2(Math.sin(lon1 - lon2) * Math.cos(lat2), Math.cos(lat1) * Math.sin(lat2) - Math.sin(lat1) *\r\n     Math.cos(lat2) * Math.cos(lon1 - lon2))\r\n   if (angle < 0) {\r\n     angle += Math.PI * 2.0\r\n   }\r\n   return angle\r\n }\r\n export function addArea(viewer,area, positions) {\r\n   // let viewer = this.viewer\r\n   let box = viewer.entities.add({\r\n     name: '多边形面积',\r\n     position: positions[positions.length - 1],\r\n     label: {\r\n       text: area + '平方公里',\r\n       font: '20px sans-serif',\r\n       fillColor: Cesium.Color.WHITE,\r\n       outlineWidth: 2,\r\n       backgroundColor: Cesium.Color.BLACK,\r\n       showBackground: true,\r\n       style: Cesium.LabelStyle.FILL,\r\n       pixelOffset: new Cesium.Cartesian2(60, -60),\r\n       verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n       horizontalOrigin: Cesium.HorizontalOrigin.CENTER,\r\n       heightReference: Cesium.HeightReference.CLAMP_TO_GROUND,\r\n       disableDepthTestDistance: Number.POSITIVE_INFINITY\r\n     }\r\n   })\n   return box\r\n }\r\n /* 绘制函数 */\r\n export function drawPointLabel(viewer,position, pointNum) {\r\n   // let viewer = this.viewer\r\n   // 本质上就是添加一个点的实体\r\n   let box= viewer.entities.add({\r\n     name: '点几何对象',\r\n     position: position,\r\n     point: {\r\n       color: Cesium.Color.WHEAT,\r\n       pixelSize: 5,\r\n       outlineWidth: 3,\r\n       disableDepthTestDistance: Number.POSITIVE_INFINITY, //\r\n       heightReference: Cesium.HeightReference.CLAMP_TO_GROUND // 规定贴地\r\n     },\r\n     label: {\r\n       text: pointNum,\r\n       font: '30px sans-serif',\r\n       fillColor: Cesium.Color.WHITE,\r\n       outlineWidth: 2,\r\n       backgroundColor: Cesium.Color.BLACK,\r\n       showBackground: true,\r\n       style: Cesium.LabelStyle.FILL,\r\n       verticalOrigin: Cesium.VerticalOrigin.BOTTOM,\r\n       horizontalOrigin: Cesium.HorizontalOrigin.CENTER\r\n     }\r\n   })\n   return box\r\n }\r\n export function drawPoint(viewer,position) {\r\n   // let viewer = this.viewer\r\n   // 本质上就是添加一个点的实体\r\n   let box= viewer.entities.add({\r\n     position: position,\r\n     point: {\r\n       color: Cesium.Color.WHEAT,\r\n       pixelSize: 5,\r\n       outlineWidth: 3,\r\n       disableDepthTestDistance: Number.POSITIVE_INFINITY,\r\n       heightReference: Cesium.HeightReference.CLAMP_TO_GROUND // 规定贴地\r\n     }\r\n   })\n   return box\r\n }\r\n export function drawPolyline(viewer,positions) {\r\n   // let viewer = this.viewer\r\n   if (positions.length < 1) return\r\n   let box= viewer.entities.add({\r\n     name: '线几何对象',\r\n     polyline: {\r\n       positions: positions,\r\n       width: 5.0,\r\n       material: new Cesium.PolylineGlowMaterialProperty({\r\n         // eslint-disable-next-line new-cap\r\n         color: Cesium.Color.WHEAT\r\n       }),\r\n       depthFailMaterial: new Cesium.PolylineGlowMaterialProperty({\r\n         // eslint-disable-next-line new-cap\r\n         color: Cesium.Color.WHEAT\r\n       }),\r\n       clampToGround: true\r\n     }\r\n   })\n   return box\r\n }\r\n export function drawPolygon(viewer,positions) {\r\n   // let viewer = this.viewer\r\n   if (positions.length < 2) return\r\n   let box= viewer.entities.add({\r\n     name: '面几何对象',\r\n     polygon: {\r\n       hierarchy: positions,\r\n       // eslint-disable-next-line new-cap\r\n       material: new Cesium.ColorMaterialProperty(\r\n         Cesium.Color.WHEAT.withAlpha(0.4)\r\n       )\r\n     }\r\n   })\n   return box\r\n }\n","<template>\r\n\t<div class=\"full\">\r\n\t\t<dv-border-box-13>\r\n\t\t\t<div class=\"amap-wrapper\">\r\n\t\t\t\t<div id=\"cesiumDemo\"></div>\r\n\t\t\t\t<transition name=\"el-fade-in-linear\">\r\n\t\t\t\t\t<div class=\"buildMessageBox messageBox\" v-show=\"buildMessageBoxShow\">\r\n\t\t\t\t\t\t<div class=\"topLine\"></div>\r\n\t\t\t\t\t\t<div class=\"slantLine\"></div>\r\n\t\t\t\t\t\t<div class=\"title\">\r\n\t\t\t\t\t\t\t<span class=\"messageBoxTit\">{{name}}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"contList\">\r\n\t\t\t\t\t\t\t<span class=\"messageBoxTit\">楼栋数：</span><span class=\"messageVal\">80</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"contList\">\r\n\t\t\t\t\t\t\t<span class=\"messageBoxTit\">户数：</span><span class=\"messageVal\">314</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"contList\">\r\n\t\t\t\t\t\t\t<span class=\"messageBoxTit\">人数：</span><span class=\"messageVal\">1149</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"contList\">\r\n\t\t\t\t\t\t\t<span class=\"messageBoxTit\">党员数：</span><span class=\"messageVal\">124人</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</transition>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"position: absolute;left: 10px ;\">\r\n\t\t\t\t<back-button></back-button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"btnContainer\">\r\n\t\t\t\t<button @click=\"draw('Polyline')\">标点测距</button>\r\n\t\t\t\t<button @click=\"draw('Polygon')\">标点测面</button>\r\n\t\t\t\t<button @click=\"clearAllDrawn()\">清空数据</button>\r\n\t\t\t\t<div class=\"tip\">\r\n\t\t\t\t\t<p>点击按钮后，在场景内单击左键标点，单击右键结束测量。</p>\r\n\t\t\t\t\t<p>点击“标点测距”按钮后在场景内单击鼠标左键加点，在两点间显示距离，单击右键结束测量。</p>\r\n\t\t\t\t\t<p>点击“标点测面”按钮后在场景内单击鼠标左键加点，单击右键在勾出的范围中显示面积。</p>\r\n\t\t\t\t\t<p>点击“清空数据”按钮删除所有数据。</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</dv-border-box-13>\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tLoading\r\n\t} from 'element-ui';\r\n\tlet options\r\n\timport {\r\n\t\tset3Dtitle2,\r\n\t\tlablelist,\r\n\t\tcylinderModel\r\n\t} from '../../assets/js/cusium.js'\r\n\timport {\r\n\t\tgetLength,\r\n\t\tgetMidpoint,\r\n\t\taddLabel,\r\n\t\tBearing,\r\n\t\tdrawPolyline,\r\n\t\tdrawPolygon,\r\n\t\tdrawPoint,\r\n\t\taddArea,\r\n\t\tdrawPointLabel\r\n\t} from '../../assets/js/MeasureManager.js'\r\n\tlet viewer\r\n\tlet tilesFloodTest\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tviewer: undefined,\r\n\t\t\t\ttempEntities: [],\r\n\t\t\t\tpointNum: 0,\r\n\t\t\t\tfloatingPoint: undefined,\r\n\t\t\t\tactiveShape: undefined,\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\tnum: 100,\r\n\t\t\t\t\tcontent: '{nt}'\r\n\t\t\t\t},\r\n\t\t\t\tbuildMessageBoxShow: false,\r\n\t\t\t\tmapMouseDown: false,\r\n\t\t\t\t// // 分层单体化反选数据\r\n\t\t\t\tlayered: {\r\n\t\t\t\t\tfirst: {\r\n\t\t\t\t\t\t// x: -2716017.9098884147\r\n\t\t\t\t\t\t// y: 4733221.085409288\r\n\t\t\t\t\t\t// z: 3290520.383644969\r\n\r\n\t\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\t\tx: -2716017.9098884147,\r\n\t\t\t\t\t\t\ty: 4733221.085409288,\r\n\t\t\t\t\t\t\tz: 3290520.383644969,\r\n\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpriipt1: 0,\r\n\t\t\t\t\t\tpriipt2: 0,\r\n\t\t\t\t\t\tpriipt3: 0,\r\n\t\t\t\t\t\tpriipt4: 0,\r\n\t\t\t\t\t\tpriipt5: 0,\r\n\t\t\t\t\t\tpriipt6: 48,\r\n\t\t\t\t\t\tpriipt7: 240,\r\n\t\t\t\t\t\tpriipt8: 240,\r\n\t\t\t\t\t\tpriipt9: 60,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsecond: {\r\n\t\t\t\t\t\t// x: -2715916.7808021326\r\n\t\t\t\t\t\t// y: 4733118.934902318\r\n\t\t\t\t\t\t// z: 3290749.2402792173\r\n\t\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\t\tx: -2715916.7808021326,\r\n\t\t\t\t\t\t\ty: 4733118.934902318,\r\n\t\t\t\t\t\t\tz: 3290749.2402792173,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tpriipt1: 0,\r\n\t\t\t\t\t\tpriipt2: 0,\r\n\t\t\t\t\t\tpriipt3: 0,\r\n\t\t\t\t\t\tpriipt4: -25,\r\n\t\t\t\t\t\tpriipt5: -8,\r\n\t\t\t\t\t\tpriipt6: 42,\r\n\t\t\t\t\t\tpriipt7: 200,\r\n\t\t\t\t\t\tpriipt8: 200,\r\n\t\t\t\t\t\tpriipt9: 50,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlablelists: [{\r\n\t\t\t\t\t\tx: \"120.80302807741732\",\r\n\t\t\t\t\t\ty: '31.30709242677048',\r\n\t\t\t\t\t\tz: 40,\r\n\t\t\t\t\t\tText: '1'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tx: '120.80408198509431',\r\n\t\t\t\t\t\ty: '31.30709242677048',\r\n\t\t\t\t\t\tText: '2',\r\n\t\t\t\t\t\tz: 40\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tbuilding: {\r\n\t\t\t\t\tfirst: {\r\n\t\t\t\t\t\tcylinder1: 100,\r\n\t\t\t\t\t\tid: 'first',\r\n\t\t\t\t\t\tx: \"119.8480302488737\",\r\n\t\t\t\t\t\ty: '31.259695847684014'\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsecond: {\r\n\t\t\t\t\t\tcylinder1: 100,\r\n\t\t\t\t\t\tid: 'second',\r\n\t\t\t\t\t\tx: '119.84770232077288',\r\n\t\t\t\t\t\ty: '31.26175225162898'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tenitylist: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.getCesiumDem()\r\n\t\t\tconst loading = this.$loading({\r\n\t\t\t\tlock: true,\r\n\t\t\t\ttext: 'Loading',\r\n\t\t\t\tspinner: 'el-icon-loading',\r\n\t\t\t\tbackground: 'rgba(0, 0, 0, 0.7)'\r\n\t\t\t});\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tloading.close();\r\n\t\t\t}, 2000);\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t// 角度\r\n\t\t\tpointAngle(point1, point2, point3) {\r\n\t\t\t\tlet bearing21 = Bearing(point2, point1)\r\n\t\t\t\tlet bearing23 = Bearing(point2, point3)\r\n\t\t\t\tlet angle = bearing21 - bearing23\r\n\t\t\t\tif (angle < 0) {\r\n\t\t\t\t\tangle += Math.PI * 2.0\r\n\t\t\t\t}\r\n\t\t\t\treturn angle\r\n\t\t\t},\r\n\t\t\tgetArea(positions) {\r\n\t\t\t\tlet res = 0\r\n\t\t\t\tfor (let i = 0; i < positions.length - 2; i++) {\r\n\t\t\t\t\tlet j = (i + 1) % positions.length\r\n\t\t\t\t\tlet k = (i + 2) % positions.length\r\n\t\t\t\t\tlet totalAngle = this.pointAngle(positions[i], positions[j], positions[k])\r\n\t\t\t\t\tlet tempLength1 = getLength(positions[j], positions[0])\r\n\t\t\t\t\tlet tempLength2 = getLength(positions[k], positions[0])\r\n\t\t\t\t\tres += tempLength1 * tempLength2 * Math.sin(totalAngle) / 2\r\n\t\t\t\t}\r\n\t\t\t\tres = res.toFixed(2)\r\n\t\t\t\t// console.log(res)\r\n\t\t\t\tres = parseFloat(res)\r\n\t\t\t\t// console.log(Math.abs(res))\r\n\t\t\t\treturn Math.abs(res)\r\n\t\t\t},\r\n\t\t\t/* 清除实体 */\r\n\t\t\tclearAllDrawn() {\r\n\t\t\t\tthis.tempEntities = []\r\n\t\t\t\tthis.pointNum = 0\r\n\t\t\t\tviewer.entities.removeAll()\r\n\t\t\t\tset3Dtitle2(viewer)\r\n\t\t\t\tfor (var i = 0; i < this.lablelists.length; i++) {\r\n\t\t\t\t\tlet a = i;\r\n\t\t\t\t\tlet data = this.lablelists\r\n\t\t\t\t\tlablelist(viewer, data, a)\r\n\t\t\t\t}\r\n\t\t\t\tlet building = this.building\r\n\t\t\t\tcylinderModel(viewer, building, 'first')\r\n\t\t\t\tcylinderModel(viewer, building, 'second')\r\n\t\t\t},\r\n\t\t\t/* 根据类型绘制对象\r\n\t\t\t * @param type point polyline polygon */\r\n\t\t\tdraw(type) {\r\n\t\t\t\tlet that = this\r\n\t\t\t\tlet tempEntities = this.tempEntities\r\n\t\t\t\tlet floatingPoint = this.floatingPoint\r\n\t\t\t\tlet activeShape = this.activeShape\r\n\t\t\t\tlet position = []\r\n\t\t\t\tlet tempPoints = []\r\n\t\t\t\tlet activeShapePoints = []\r\n\t\t\t\t// 开启深度检测\r\n\t\t\t\t// viewer.scene.globe.depthTestAgainstTerrain = true\r\n\t\t\t\t// 创建场景的HTML canvas元素\r\n\t\t\t\tlet handler = new Cesium.ScreenSpaceEventHandler(viewer.scene.canvas)\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\t// 绘制线\r\n\t\t\t\t\tcase 'Polyline':\r\n\t\t\t\t\t\t// 取消鼠标双击事件\r\n\t\t\t\t\t\tviewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType\r\n\t\t\t\t\t\t\t.LEFT_DOUBLE_CLICK)\r\n\t\t\t\t\t\t// 监听鼠标移动\r\n\t\t\t\t\t\thandler.setInputAction(function(movement) {\r\n\t\t\t\t\t\t\tif (Cesium.defined(floatingPoint)) {\r\n\t\t\t\t\t\t\t\tlet newPosition = viewer.scene.pickPosition(movement.endPosition)\r\n\t\t\t\t\t\t\t\tif (Cesium.defined(newPosition)) {\r\n\t\t\t\t\t\t\t\t\tfloatingPoint.position.setValue(newPosition)\r\n\t\t\t\t\t\t\t\t\tactiveShapePoints.pop()\r\n\t\t\t\t\t\t\t\t\tactiveShapePoints.push(newPosition)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\r\n\t\t\t\t\t\t// 左键单击开始画线\r\n\t\t\t\t\t\thandler.setInputAction(function(click) {\r\n\t\t\t\t\t\t\tlet earthPosition = viewer.scene.pickPosition(click.position)\r\n\t\t\t\t\t\t\tif (Cesium.defined(earthPosition)) {\r\n\t\t\t\t\t\t\t\tfloatingPoint = drawPoint(viewer, earthPosition)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 获取位置信息\r\n\t\t\t\t\t\t\t// 从相机位置创建一条射线，这条射线通过世界中movement.position像素所在的坐标,返回Cartesian3坐标\r\n\t\t\t\t\t\t\tlet ray = viewer.camera.getPickRay(click.position)\r\n\t\t\t\t\t\t\t// 找到射线与渲染的地球表面之间的交点。射线必须以世界坐标给出。返回Cartesian3坐标\r\n\t\t\t\t\t\t\tposition = viewer.scene.globe.pick(ray, viewer.scene)\r\n\t\t\t\t\t\t\ttempPoints.push(position) // 记录点位\r\n\t\t\t\t\t\t\tthat.pointNum += 1\r\n\t\t\t\t\t\t\tlet tempLength = tempPoints.length // 记录点数\r\n\t\t\t\t\t\t\t// 调用绘制点的接口\r\n\t\t\t\t\t\t\tlet point = drawPointLabel(viewer, tempPoints[tempPoints.length - 1], JSON.stringify(\r\n\t\t\t\t\t\t\t\tthat.pointNum))\r\n\t\t\t\t\t\t\ttempEntities.push(point)\r\n\t\t\t\t\t\t\t// 存在超过一个点时\r\n\t\t\t\t\t\t\tif (tempLength > 1) {\r\n\t\t\t\t\t\t\t\t// 绘制线\r\n\t\t\t\t\t\t\t\tlet pointLength = getLength(tempPoints[tempPoints.length - 2], tempPoints[\r\n\t\t\t\t\t\t\t\t\ttempPoints.length - 1])\r\n\t\t\t\t\t\t\t\tlet midPosition = getMidpoint(tempPoints[tempPoints.length - 2], tempPoints[\r\n\t\t\t\t\t\t\t\t\ttempPoints.length - 1])\r\n\t\t\t\t\t\t\t\tlet pointline = drawPolyline(viewer, [tempPoints[tempPoints.length - 2],\r\n\t\t\t\t\t\t\t\t\ttempPoints[tempPoints.length - 1]\r\n\t\t\t\t\t\t\t\t])\r\n\t\t\t\t\t\t\t\tlet pointLabel = addLabel(viewer, midPosition, pointLength)\r\n\t\t\t\t\t\t\t\ttempEntities.push(pointline) // 保存记录\r\n\t\t\t\t\t\t\t\ttempEntities.push(pointLabel)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n\t\t\t\t\t\t// 右键单击结束画线\r\n\t\t\t\t\t\thandler.setInputAction(function(click) {\r\n\t\t\t\t\t\t\t// console.log(that.pointNum)\r\n\t\t\t\t\t\t\tactiveShapePoints.pop()\r\n\t\t\t\t\t\t\tviewer.entities.remove(activeShapePoints)\r\n\t\t\t\t\t\t\tviewer.entities.remove(floatingPoint)\r\n\t\t\t\t\t\t\ttempPoints = [] // 清空点位记录\r\n\t\t\t\t\t\t\thandler.destroy()\r\n\t\t\t\t\t\t\thandler = null\r\n\t\t\t\t\t\t\tfloatingPoint = undefined\r\n\t\t\t\t\t\t\tactiveShape = undefined\r\n\t\t\t\t\t\t\tactiveShapePoints = []\r\n\t\t\t\t\t\t\t// console.log(that.pointNum)\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t// 绘制面\r\n\t\t\t\t\tcase 'Polygon':\r\n\t\t\t\t\t\t// 取消鼠标双击事件\r\n\t\t\t\t\t\tviewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType\r\n\t\t\t\t\t\t\t.LEFT_DOUBLE_CLICK)\r\n\t\t\t\t\t\t// 监听鼠标移动\r\n\t\t\t\t\t\thandler.setInputAction(function(movement) {\r\n\t\t\t\t\t\t\tif (Cesium.defined(floatingPoint)) {\r\n\t\t\t\t\t\t\t\tlet newPosition = viewer.scene.pickPosition(movement.endPosition)\r\n\t\t\t\t\t\t\t\tif (Cesium.defined(newPosition)) {\r\n\t\t\t\t\t\t\t\t\tfloatingPoint.position.setValue(newPosition)\r\n\t\t\t\t\t\t\t\t\tactiveShapePoints.pop()\r\n\t\t\t\t\t\t\t\t\tactiveShapePoints.push(newPosition)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\r\n\t\t\t\t\t\t// 左键单击开始画线\r\n\t\t\t\t\t\thandler.setInputAction(function(click) {\r\n\t\t\t\t\t\t\tlet earthPosition = viewer.scene.pickPosition(click.position)\r\n\t\t\t\t\t\t\tif (Cesium.defined(earthPosition)) {\r\n\t\t\t\t\t\t\t\tif (activeShapePoints.length === 0) {\r\n\t\t\t\t\t\t\t\t\tfloatingPoint = drawPoint(viewer, earthPosition)\r\n\t\t\t\t\t\t\t\t\tactiveShapePoints.push(earthPosition)\r\n\t\t\t\t\t\t\t\t\tconst dynamicPositions = new Cesium.CallbackProperty(function() {\r\n\t\t\t\t\t\t\t\t\t\treturn new Cesium.PolygonHierarchy(activeShapePoints)\r\n\t\t\t\t\t\t\t\t\t}, false)\r\n\t\t\t\t\t\t\t\t\tactiveShape = drawPolygon(viewer, dynamicPositions)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tactiveShapePoints.push(earthPosition)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 获取位置信息\r\n\t\t\t\t\t\t\tlet ray = viewer.camera.getPickRay(click.position)\r\n\t\t\t\t\t\t\tposition = viewer.scene.globe.pick(ray, viewer.scene)\r\n\t\t\t\t\t\t\ttempPoints.push(position) // 记录点位\r\n\t\t\t\t\t\t\tlet tempLength = tempPoints.length // 记录点数\r\n\t\t\t\t\t\t\tthat.pointNum += 1\r\n\t\t\t\t\t\t\t// 调用绘制点的接口\r\n\t\t\t\t\t\t\tlet point = drawPointLabel(viewer, tempPoints[tempPoints.length - 1], JSON.stringify(\r\n\t\t\t\t\t\t\t\tthat.pointNum))\r\n\t\t\t\t\t\t\ttempEntities.push(point)\r\n\t\t\t\t\t\t\t// 存在超过一个点时\r\n\t\t\t\t\t\t\tif (tempLength > 1) {\r\n\t\t\t\t\t\t\t\t// 绘制线\r\n\t\t\t\t\t\t\t\tlet pointline = drawPolyline(viewer, [tempPoints[tempPoints.length - 2],\r\n\t\t\t\t\t\t\t\t\ttempPoints[tempPoints.length - 1]\r\n\t\t\t\t\t\t\t\t])\r\n\t\t\t\t\t\t\t\ttempEntities.push(pointline) // 保存记录\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n\t\t\t\t\t\t// 右键单击结束画面\r\n\t\t\t\t\t\thandler.setInputAction(function(click) {\r\n\t\t\t\t\t\t\t// 选择一个椭球或地图\r\n\t\t\t\t\t\t\tlet cartesian = viewer.camera.pickEllipsoid(click.position, viewer.scene.globe\r\n\t\t\t\t\t\t\t\t.ellipsoid)\r\n\t\t\t\t\t\t\tif (cartesian) {\r\n\t\t\t\t\t\t\t\tlet tempLength = tempPoints.length\r\n\t\t\t\t\t\t\t\tif (tempLength < 3) {\r\n\t\t\t\t\t\t\t\t\talert('闭合操作需要至少3个点嗷')\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// 闭合最后一条线\r\n\t\t\t\t\t\t\t\t\tlet pointline = drawPolyline(viewer, [tempPoints[0], tempPoints[tempPoints\r\n\t\t\t\t\t\t\t\t\t\t.length - 1]])\r\n\t\t\t\t\t\t\t\t\ttempEntities.push(pointline)\r\n\t\t\t\t\t\t\t\t\tdrawPolygon(viewer, tempPoints)\r\n\t\t\t\t\t\t\t\t\tlet pointArea = that.getArea(tempPoints)\r\n\t\t\t\t\t\t\t\t\taddArea(viewer, JSON.stringify(pointArea), tempPoints)\r\n\t\t\t\t\t\t\t\t\ttempEntities.push(tempPoints)\r\n\t\t\t\t\t\t\t\t\thandler.destroy()\r\n\t\t\t\t\t\t\t\t\thandler = null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tactiveShapePoints.pop()\r\n\t\t\t\t\t\t\tviewer.entities.remove(activeShapePoints)\r\n\t\t\t\t\t\t\tviewer.entities.remove(floatingPoint)\r\n\t\t\t\t\t\t\tfloatingPoint = undefined\r\n\t\t\t\t\t\t\tactiveShapePoints = []\r\n\t\t\t\t\t\t}, Cesium.ScreenSpaceEventType.RIGHT_CLICK)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 分层单体化\r\n\t\t\tlayeredTilesModel(data) {\r\n\t\t\t\tlet scene = viewer.scene\r\n\t\t\t\tif (tilesFloodTest) {\r\n\t\t\t\t\ttilesFloodTest.destroy()\r\n\t\t\t\t}\r\n\t\t\t\tvar center = new Cesium.Cartesian3(\r\n\t\t\t\t\tthis.layered[data].center.x, this.layered[data].center.y, this.layered[data].center.z,\r\n\t\t\t\t)\r\n\t\t\t\tvar modelMatrix = Cesium.Transforms.eastNorthUpToFixedFrame(center)\r\n\t\t\t\tvar hprRotation = Cesium.Matrix3.fromHeadingPitchRoll(\r\n\t\t\t\t\t// 第一个参数是y轴偏移角度，第二个参数是x轴偏移角度，第三个参数是z轴偏移角度\r\n\t\t\t\t\tnew Cesium.HeadingPitchRoll(Number(this.layered[data].priipt1), Number(this.layered[data].priipt2),\r\n\t\t\t\t\t\tNumber(\r\n\t\t\t\t\t\t\tthis.layered[data].priipt3))\r\n\t\t\t\t)\r\n\t\t\t\tvar hpr = Cesium.Matrix4.fromRotationTranslation(\r\n\t\t\t\t\thprRotation,\r\n\t\t\t\t\t// 第一个参数是遮罩整体的横向定位，第二个参数是竖向定位，第三个参数是高度定位\r\n\t\t\t\t\tnew Cesium.Cartesian3(Number(this.layered[data].priipt4), Number(this.layered[data].priipt5),\r\n\t\t\t\t\t\tNumber(this\r\n\t\t\t\t\t\t\t.layered[data].priipt6))\r\n\t\t\t\t)\r\n\t\t\t\tCesium.Matrix4.multiply(modelMatrix, hpr, modelMatrix)\r\n\t\t\t\ttilesFloodTest = scene.primitives.add(\r\n\t\t\t\t\tnew Cesium.ClassificationPrimitive({\r\n\t\t\t\t\t\tgeometryInstances: new Cesium.GeometryInstance({\r\n\t\t\t\t\t\t\tgeometry: Cesium.BoxGeometry.fromDimensions({\r\n\t\t\t\t\t\t\t\tvertexFormat: Cesium.PerInstanceColorAppearance.VERTEX_FORMAT,\r\n\t\t\t\t\t\t\t\t// 第一个参数是遮罩的整体横向长度，第二个参数是竖向长度，第三个参数是整体高度\r\n\t\t\t\t\t\t\t\tdimensions: new Cesium.Cartesian3(Number(this.layered[data]\r\n\t\t\t\t\t\t\t\t\t.priipt7), Number(this.layered[\r\n\t\t\t\t\t\t\t\t\tdata].priipt8), Number(this.layered[data].priipt9))\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\tmodelMatrix: modelMatrix,\r\n\t\t\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\t\t\tcolor: Cesium.ColorGeometryInstanceAttribute.fromColor(\r\n\t\t\t\t\t\t\t\t\tCesium.Color.fromCssColorString('#D22809').withAlpha(0.5)\r\n\t\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\t\tshow: new Cesium.ShowGeometryInstanceAttribute(true)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t// id: 'volume 1'\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tclassificationType: Cesium.ClassificationType.CESIUM_3D_TILE\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t// 实例cesium\r\n\t\t\tgetCesiumDem() {\r\n\t\t\t\tlet self = this\r\n\t\t\t\tCesium.Ion.defaultAccessToken =\r\n\t\t\t\t\t'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJkNjgwMDgwNS1mMzFmLTQ3ODItYmRhOS1hYjNhMTFkM2I0N2YiLCJpZCI6MTMxMDkwLCJpYXQiOjE2ODAwNjU0MTZ9.nvutxZY3TNl8df3PURG96km6EFH85SmlzWCW-75QHuE'\r\n\t\t\t\tviewer = new Cesium.Viewer('cesiumDemo', {\r\n\t\t\t\t\tanimation: false, // 是否显示动画控件\r\n\t\t\t\t\tbaseLayerPicker: false, // 是否显示图层选择控件\r\n\t\t\t\t\tgeocoder: false, // 是否显示地名查找控件\r\n\t\t\t\t\ttimeline: false, // 是否显示时间线控件\r\n\t\t\t\t\tsceneModePicker: true, // 是否显示投影方式控件\r\n\t\t\t\t\tnavigationHelpButton: false, // 是否显示帮助信息控件\r\n\t\t\t\t\tinfoBox: true, // 是否显示点击要素之后显示的信息\r\n\t\t\t\t\tfullscreenButton: false, // 是否显示全屏按钮\r\n\t\t\t\t\tselectionIndicator: false, // 是否显示选中指示框\r\n\t\t\t\t\tscene3DOnly: true,\r\n\t\t\t\t\thomeButton: false,\r\n\t\t\t\t\tterrainProvider: new Cesium.EllipsoidTerrainProvider({}),\r\n\t\t\t\t\t// imageryProvider: new Cesium.ArcGisMapServerImageryProvider({\r\n\t\t\t\t\t// \turl: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer\",\r\n\t\t\t\t\t// \t//url: \"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer\",\r\n\t\t\t\t\t// }),\r\n\t\t\t\t})\r\n\t\t\t\tviewer.terrainProvider = Cesium.createWorldTerrain({\r\n\t\t\t\t\trequestWaterMask: true,\r\n\t\t\t\t\trequestVertexNormals: true\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// const measureManager = new MeasureManager(viewer)\r\n\t\t\t\t// measureManager.measurePolygon()\r\n\t\t\t\tset3Dtitle2(viewer)\r\n\t\t\t\t// self.cylinderModel()\r\n\t\t\t\tfor (var i = 0; i < self.lablelists.length; i++) {\r\n\t\t\t\t\tlet a = i\r\n\t\t\t\t\tlet data = self.lablelists\r\n\t\t\t\t\tlablelist(viewer, data, a)\r\n\t\t\t\t}\r\n\t\t\t\tlet building = self.building\r\n\t\t\t\tcylinderModel(viewer, building, 'first')\r\n\t\t\t\tcylinderModel(viewer, building, 'second')\r\n\t\t\t\t// 地图事件开始\r\n\t\t\t\t// 得到当前三维场景\r\n\t\t\t\tlet scene = viewer.scene\r\n\t\t\t\tvar terrainProvider = Cesium.createWorldTerrain({\r\n\t\t\t\t\trequestVertexNormals: true\r\n\t\t\t\t});\r\n\t\t\t\tviewer.terrainProvider = terrainProvider;\r\n\t\t\t\tviewer.scene.globe.enableLighting = true;\r\n\t\t\t\t// 得到当前三维场景的椭球体\r\n\t\t\t\tlet ellipsoid = scene.globe.ellipsoid\r\n\t\t\t\tlet entity = viewer.entities.add({\r\n\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tlet longitudeString = null\r\n\t\t\t\tlet latitudeString = null\r\n\t\t\t\tlet height = null\r\n\t\t\t\t// 定义当前场景的画布元素的事件处理\r\n\t\t\t\tlet handler = new Cesium.ScreenSpaceEventHandler(scene.canvas)\r\n\t\t\t\t// 设置鼠标移动事件的处理函数，这里负责监听x,y坐标值变化\r\n\t\t\t\thandler.setInputAction(function(event) {\r\n\t\t\t\t\tif (self.mapMouseDown === true) {\r\n\t\t\t\t\t\tself.buildMessageBoxShow = false\r\n\t\t\t\t\t\tif (tilesFloodTest) {\r\n\t\t\t\t\t\t\ttilesFloodTest.destroy()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\r\n\t\t\t\t// 鼠标按下\r\n\t\t\t\thandler.setInputAction(function(movement) {\r\n\t\t\t\t\tself.mapMouseDown = true\r\n\t\t\t\t}, Cesium.ScreenSpaceEventType.LEFT_DOWN)\r\n\t\t\t\t// 鼠标弹起\r\n\t\t\t\thandler.setInputAction(function(movement) {\r\n\t\t\t\t\tself.mapMouseDown = false\r\n\t\t\t\t}, Cesium.ScreenSpaceEventType.LEFT_UP)\r\n\t\t\t\t//  设置鼠标点击事件\r\n\t\t\t\thandler.setInputAction(function(event) {\r\n\t\t\t\t\tlet cartesian = viewer.camera.pickEllipsoid(event.position, ellipsoid)\r\n\t\t\t\t\tif (cartesian) {\r\n\t\t\t\t\t\t// console.log(cartesian, 111)\r\n\t\t\t\t\t\t// 将笛卡尔坐标转换为地理坐标\r\n\t\t\t\t\t\tlet cartographic = ellipsoid.cartesianToCartographic(cartesian)\r\n\t\t\t\t\t\t// 将弧度转为度的十进制度表示\r\n\t\t\t\t\t\tlongitudeString = Cesium.Math.toDegrees(cartographic.longitude)\r\n\t\t\t\t\t\tlatitudeString = Cesium.Math.toDegrees(cartographic.latitude)\r\n\t\t\t\t\t\t// 获取相机高度\r\n\t\t\t\t\t\theight = Math.ceil(viewer.camera.positionCartographic.height)\r\n\t\t\t\t\t\tentity.position = cartesian\r\n\t\t\t\t\t\t// console.log(longitudeString)\r\n\t\t\t\t\t\t// console.log(latitudeString)\r\n\t\t\t\t\t\tlet pick = viewer.scene.pick(event.position)\r\n\t\t\t\t\t\tif (Cesium.defined(pick) && pick) {\r\n\t\t\t\t\t\t\tif (pick.id && pick.id.name) {\r\n\t\t\t\t\t\t\t\tlet modelDataObj = JSON.parse(pick.id.name)\r\n\t\t\t\t\t\t\t\t// 检测点击楼栋实体\r\n\t\t\t\t\t\t\t\tif (modelDataObj.cesiumType === 'cylinderBuilding') {\r\n\t\t\t\t\t\t\t\t\tself.buildMessageBoxShow = true\r\n\t\t\t\t\t\t\t\t\tlet winpos = viewer.scene.cartesianToCanvasCoordinates(\r\n\t\t\t\t\t\t\t\t\t\tpick.id.position._value\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\tlet name = pick.id.id\r\n\t\t\t\t\t\t\t\t\tself.name = name\r\n\t\t\t\t\t\t\t\t\t// 计算弹框的位置\r\n\t\t\t\t\t\t\t\t\tself.layeredTilesModel(pick.id.id)\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\t\tlet mainMessageBoxDom = document.querySelector('.buildMessageBox')\r\n\t\t\t\t\t\t\t\t\t\tlet winposWihth = mainMessageBoxDom.offsetWidth\r\n\t\t\t\t\t\t\t\t\t\tlet winposHeight = mainMessageBoxDom.offsetHeight\r\n\t\t\t\t\t\t\t\t\t\tmainMessageBoxDom.style.left = (Math.floor(winpos.x) - (\r\n\t\t\t\t\t\t\t\t\t\t\twinposWihth / 2) + 230) + 'px'\r\n\t\t\t\t\t\t\t\t\t\tmainMessageBoxDom.style.top = (Math.floor(winpos.y) -\r\n\t\t\t\t\t\t\t\t\t\t\twinposHeight - 70) + 'px'\r\n\t\t\t\t\t\t\t\t\t}, 10)\r\n\t\t\t\t\t\t\t\t\t// 检测点击到分层实体\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tself.buildMessageBoxShow = false\r\n\t\t\t\t\t\t\t\tif (tilesFloodTest) {\r\n\t\t\t\t\t\t\t\t\ttilesFloodTest.destroy()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.buildMessageBoxShow = false\r\n\t\t\t\t\t\t\tif (tilesFloodTest) {\r\n\t\t\t\t\t\t\t\ttilesFloodTest.destroy()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tentity.label.show = false\r\n\t\t\t\t\t}\r\n\t\t\t\t}, Cesium.ScreenSpaceEventType.LEFT_CLICK)\r\n\t\t\t\t// 地图事件结束\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n<style>\r\n\t.btnContainer {\r\n\t\tposition: absolute;\r\n\t\tleft: 15px;\r\n\t\ttop: 80px;\r\n\t\tpadding: 10px 15px;\r\n\t\t/*添加圆角边框*/\r\n\t\tborder-radius: 5px;\r\n\t\tborder: 1px solid rgba(128, 128, 128, 0.5);\r\n\t\tcolor: #ffffff;\r\n\t\tbackground: rgba(0, 0, 0, 0.4);\r\n\t\tbox-shadow: 0 4px 8px rgb(128 128 128 / 50%);\r\n\t\tmax-width: 300px;\r\n\t}\r\n\r\n\tbutton {\r\n\t\tbackground: transparent;\r\n\t\tborder: 1px solid #00d0ffb8;\r\n\t\tcolor: white;\r\n\t\tpadding: 7px 9px;\r\n\t\tborder-radius: 3px;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.tip p {\r\n\t\tmargin: 2px 0px;\r\n\t\tpadding: 5px 1px;\r\n\t}\r\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./3dtiles.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./3dtiles.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./3dtiles.vue?vue&type=template&id=b1aedbde&\"\nimport script from \"./3dtiles.vue?vue&type=script&lang=js&\"\nexport * from \"./3dtiles.vue?vue&type=script&lang=js&\"\nimport style0 from \"./3dtiles.vue?vue&type=style&index=0&id=b1aedbde&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","directives","name","rawName","value","buildMessageBoxShow","expression","_v","_s","staticStyle","on","$event","draw","clearAllDrawn","staticRenderFns","set3Dtitle2","viewer","translation","Cesium","Cartesian3","fromArray","m","Matrix4","fromTranslation","palaceTileset","Cesium3DTileset","url","modelMatrix","maximumScreenSpaceError","maximumMemoryUsage","dynamicScreenSpaceErrorDensity","scene","primitives","add","sun","show","skyBox","screenSpaceCameraController","minimumZoomDistance","cesiumWidget","creditContainer","style","display","readyPromise","then","heightOffset","boundingSphere","cartographic","Cartographic","fromCartesian","center","surface","fromRadians","longitude","latitude","offset","subtract","zoomTo","HeadingPitchRange","radius","lablelist","data","a","entities","position","fromDegrees","x","y","z","label","text","Text","font","fillColor","Color","WHITE","backgroundColor","BLUE","showBackground","outline","outlineColor","outlineWidth","scale","LabelStyle","FILL_AND_OUTLINE","verticalOrigin","VerticalOrigin","CENTER","horizontalOrigin","HorizontalOrigin","LEFT","pixelOffset","Cartesian2","distanceDisplayCondition","DistanceDisplayCondition","cylinderModel","building","id","orientation","Transforms","headingPitchRollQuaternion","HeadingPitchRoll","Math","toRadians","cylinder","length","topRadius","bottomRadius","material","fromCssColorString","slices","numberOfVerticalLines","getLength","start","end","startCartographic","endCartographic","geodesic","EllipsoidGeodesic","setEndPoints","surfaceDistance","toFixed","getMidpoint","startPoint","endPoint","geoPoint","interpolateUsingFraction","Ellipsoid","WGS84","cartographicToCartesian","addLabel","midPoint","labelLength","box","BLACK","FILL","BOTTOM","heightReference","HeightReference","CLAMP_TO_GROUND","disableDepthTestDistance","Number","POSITIVE_INFINITY","Bearing","from","to","fromCartographic","toCartographic","lat1","lon1","lat2","lon2","angle","atan2","sin","cos","PI","addArea","area","positions","drawPointLabel","pointNum","point","color","WHEAT","pixelSize","drawPoint","drawPolyline","polyline","width","PolylineGlowMaterialProperty","depthFailMaterial","clampToGround","drawPolygon","polygon","hierarchy","ColorMaterialProperty","withAlpha","tilesFloodTest","undefined","tempEntities","floatingPoint","activeShape","config","num","content","mapMouseDown","layered","first","priipt1","priipt2","priipt3","priipt4","priipt5","priipt6","priipt7","priipt8","priipt9","second","lablelists","cylinder1","enitylist","mounted","getCesiumDem","loading","$loading","lock","spinner","background","setTimeout","close","methods","pointAngle","point1","point2","point3","bearing21","bearing23","getArea","res","i","j","k","totalAngle","tempLength1","tempLength2","parseFloat","abs","removeAll","type","that","tempPoints","activeShapePoints","handler","ScreenSpaceEventHandler","canvas","screenSpaceEventHandler","removeInputAction","ScreenSpaceEventType","LEFT_DOUBLE_CLICK","setInputAction","movement","defined","newPosition","pickPosition","endPosition","setValue","pop","push","MOUSE_MOVE","click","earthPosition","ray","camera","getPickRay","globe","pick","tempLength","JSON","stringify","pointLength","midPosition","pointline","pointLabel","LEFT_CLICK","remove","destroy","RIGHT_CLICK","dynamicPositions","CallbackProperty","PolygonHierarchy","cartesian","pickEllipsoid","ellipsoid","alert","pointArea","layeredTilesModel","eastNorthUpToFixedFrame","hprRotation","Matrix3","fromHeadingPitchRoll","hpr","fromRotationTranslation","multiply","ClassificationPrimitive","geometryInstances","GeometryInstance","geometry","BoxGeometry","fromDimensions","vertexFormat","PerInstanceColorAppearance","VERTEX_FORMAT","dimensions","attributes","ColorGeometryInstanceAttribute","fromColor","ShowGeometryInstanceAttribute","classificationType","ClassificationType","CESIUM_3D_TILE","self","Ion","defaultAccessToken","Viewer","animation","baseLayerPicker","geocoder","timeline","sceneModePicker","navigationHelpButton","infoBox","fullscreenButton","selectionIndicator","scene3DOnly","homeButton","terrainProvider","EllipsoidTerrainProvider","createWorldTerrain","requestWaterMask","requestVertexNormals","enableLighting","entity","longitudeString","latitudeString","height","event","LEFT_DOWN","LEFT_UP","cartesianToCartographic","toDegrees","ceil","positionCartographic","modelDataObj","parse","cesiumType","winpos","cartesianToCanvasCoordinates","_value","mainMessageBoxDom","document","querySelector","winposWihth","offsetWidth","winposHeight","offsetHeight","left","floor","top","component"],"sourceRoot":""}