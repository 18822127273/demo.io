{"version":3,"file":"js/9892.d906e004.js","mappings":"qJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,eAAeF,EAAII,GAAG,WAAW,EACjH,EACIC,EAAkB,G,UCOtB,GACAC,OACA,IAAAC,EAAAA,CAAAC,EAAAC,EAAAC,KAEA,IAAAD,EACAC,EAAA,IAAAC,MAAA,WACA,KAAAC,YAAAH,GAIAC,IAFAA,EAAA,IAAAC,MAAA,cAGA,EAEAE,EAAAA,CAAAL,EAAAC,EAAAC,KACA,KAAAD,EACAC,EAAA,IAAAC,MAAA,WAEA,UAAAG,SAAAC,WACA,KAAAC,MAAAF,SAAAG,cAAA,aAEAP,IACA,EAEAQ,EAAAA,CAAAV,EAAAC,EAAAC,KACA,KAAAD,EACAC,EAAA,IAAAC,MAAA,YACAF,IAAA,KAAAK,SAAAK,KACAT,EAAA,IAAAC,MAAA,eAEAD,GACA,EAEA,OACAI,SAAA,CACAK,KAAA,GACAJ,UAAA,GACAK,QAAA,GACAC,QAAA,QACAC,UAAA,GAEAC,MAAA,CACAJ,KAAA,EACAK,UAAA,EACAC,UAAAZ,EACAa,QAAA,SAEAX,UAAA,EACAS,UAAA,EACAC,UAAAP,EACAQ,QAAA,SAEAN,QAAA,EACAI,UAAA,EACAC,UAAAlB,EACAmB,QAAA,SAEAC,QAAA,EACAH,UAAA,EACAI,QAAA,WACAF,QAAA,UAIA,EACAG,QAAA,CAEAjB,YAAAkB,GACA,gCAAAC,KAAAD,EAKA,EAEAE,qBAEA,MAAAC,EAAA,KAAAnB,SACA,KAAAE,MAAAF,SAAAG,cAAA,WAAAiB,IAEA,GADAC,QAAAC,IAAAF,GACAA,EAeA,SAdA,KAAAG,SAAA,cAEA,KAAAvB,SAAAO,QAAA,UACAM,EAAAA,EAAAA,IAAA,CACAP,QAAAa,EAAAb,QACAkB,KAAA,IACAC,MAAAC,IACAL,QAAAC,IAAAI,EAAA,SAEAC,YAAA,KACA,KAAA3B,SAAAQ,UAAA,EACA,KAAAoB,OAAA,MACA,IAGA,GAEA,EACAA,OAAAC,GACAR,QAAAC,IAAAO,GACAA,EAAAA,GAAA,GACA,KAAA7B,SAAAO,QAAAsB,EAAA,OAEA,IAAAC,EAAAC,aAAA,KACAF,EAAA,GACA,KAAA7B,SAAAO,QAAAsB,EAAA,SACAA,IAEA,KAAA7B,SAAAO,QAAA,QACA,KAAAP,SAAAQ,UAAA,EACAwB,cAAAF,GACA,GACA,IAEA,EACAG,WAAAC,GACA,MAAAf,EAAA,KAAAnB,SACA,KAAAE,MAAAF,SAAAmC,UAAAC,IACAA,IACAC,EAAAA,EAAAA,IAAA,CACA/B,QAAAa,EAAAb,QACAO,QAAAM,EAAAN,QACAyB,SAAAnB,EAAAd,OACAoB,MAAAC,IAEA,GADAL,QAAAC,IAAA,QACA,KAAAiB,OAAAC,MAAAC,SAAA,CACA,KAAAlB,SAAAmB,QAAA,QACA,IAAAD,EAAA,KAAAF,OAAAC,MAAAC,SACA,KAAAE,QAAAC,QAAAH,EACA,MACA,KAAAE,QAAAC,QAAA,IACA,GAGA,GAIA,EACAC,UAAAX,GACA,KAAAhC,MAAAgC,GAAAY,aACA,ICtJmQ,I,UCO/PC,GAAY,OACd,EACA9D,EACAM,GACA,EACA,KACA,KACA,MAIF,EAAewD,EAAiB,O","sources":["webpack://demo/./src/components/main/userCenter.vue","webpack://demo/src/components/main/userCenter.vue","webpack://demo/./src/components/main/userCenter.vue?67e6","webpack://demo/./src/components/main/userCenter.vue?9864"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('back-button'),_vm._v(\" 个人中心 \")],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <back-button></back-button>\n     个人中心\n  </div>\n</template>\n\n<script>\n  import {forgetPwd,captcha} from \"../../config/api\";\n  export default {\n  \tdata() {\n  \t\tvar checkphone = (rule, value, callback) => {\n  \t\t\t// let phoneReg = /(^1[3|4|5|6|7|8|9]\\d{9}$)|(^09\\d{8}$)/;\n  \t\t\tif (value == \"\") {\n  \t\t\t\tcallback(new Error(\"请输入手机号\"));\n  \t\t\t} else if (!this.isCellPhone(value)) {\n  \t\t\t\t//引入methods中封装的检查手机格式的方法\n  \t\t\t\tcallback(new Error(\"请输入正确的手机号!\"));\n  \t\t\t} else {\n  \t\t\t\tcallback();\n  \t\t\t}\n  \t\t};\n  \t\tvar validatePass = (rule, value, callback) => {\n  \t\t\tif (value === \"\") {\n  \t\t\t\tcallback(new Error(\"请输入密码\"));\n  \t\t\t} else {\n  \t\t\t\tif (this.ruleForm.checkPass !== \"\") {\n  \t\t\t\t\tthis.$refs.ruleForm.validateField(\"checkPass\");\n  \t\t\t\t}\n  \t\t\t\tcallback();\n  \t\t\t}\n  \t\t};\n  \t\tvar validatePass2 = (rule, value, callback) => {\n  \t\t\tif (value === \"\") {\n  \t\t\t\tcallback(new Error(\"请再次输入密码\"));\n  \t\t\t} else if (value !== this.ruleForm.pass) {\n  \t\t\t\tcallback(new Error(\"两次输入密码不一致!\"));\n  \t\t\t} else {\n  \t\t\t\tcallback();\n  \t\t\t}\n  \t\t};\n  \t\treturn {\n  \t\t\truleForm: {\n  \t\t\t\tpass: \"\",\n  \t\t\t\tcheckPass: \"\",\n  \t\t\t\taccount: \"\",\n  \t\t\t\tbtnText: \"发送验证码\",\n  \t\t\t\tdisabled: false,\n  \t\t\t},\n  \t\t\trules: {\n  \t\t\t\tpass: [{\n  \t\t\t\t\trequired: true,\n  \t\t\t\t\tvalidator: validatePass,\n  \t\t\t\t\ttrigger: \"blur\"\n  \t\t\t\t}],\n  \t\t\t\tcheckPass: [{\n  \t\t\t\t\trequired: true,\n  \t\t\t\t\tvalidator: validatePass2,\n  \t\t\t\t\ttrigger: \"blur\"\n  \t\t\t\t}, ],\n  \t\t\t\taccount: [{\n  \t\t\t\t\trequired: true,\n  \t\t\t\t\tvalidator: checkphone,\n  \t\t\t\t\ttrigger: \"blur\"\n  \t\t\t\t}],\n  \t\t\t\tcaptcha: [{\n  \t\t\t\t\trequired: true,\n  \t\t\t\t\tmessage: \"请输入短信验证码\",\n  \t\t\t\t\ttrigger: \"blur\"\n  \t\t\t\t}, ],\n  \t\t\t},\n  \t\t};\n  \t},\n  \tmethods: {\n  \t\t//检查手机号\n  \t\tisCellPhone(val) {\n  \t\t\tif (!/^1(3|4|5|6|7|8)\\d{9}$/.test(val)) {\n  \t\t\t\treturn false;\n  \t\t\t} else {\n  \t\t\t\treturn true;\n  \t\t\t}\n  \t\t},\n  \t\t// 发送验证码\n  \t\tbindforgetSendCode() {\n  \t\t\t//手机号 为空的话\n  \t\t\tconst requestData = this.ruleForm\n  \t\t\tthis.$refs.ruleForm.validateField(\"account\", (errorMessage) => {\n  \t\t\t\tconsole.log(errorMessage);\n  \t\t\t\tif (!errorMessage) {\n  \t\t\t\t\tthis.$message(\"已发送验证码，请查收\");\n\n  \t\t\t\t\tthis.ruleForm.btnText = \"请稍候...\";\n  \t\t\t\t\tcaptcha({\n  \t\t\t\t\t\taccount: requestData.account,\n  \t\t\t\t\t\ttype:0\n  \t\t\t\t\t}).then(res => {\n  \t\t\t\t\t\tconsole.log(res,1111)\n  \t\t\t\t\t})\n  \t\t\t\t\tsetTimeout(() => {\n  \t\t\t\t\t\tthis.ruleForm.disabled = true;\n  \t\t\t\t\t\tthis.doLoop(60);\n  \t\t\t\t\t}, 500);\n  \t\t\t\t} else {\n  \t\t\t\t\treturn false;\n  \t\t\t\t}\n  \t\t\t})\n  \t\t},\n  \t\tdoLoop(seconds) {\n  \t\t\tconsole.log(seconds);\n  \t\t\tseconds = seconds ? seconds : 60;\n  \t\t\tthis.ruleForm.btnText = seconds + \"s后获取\";\n  \t\t\t// this.code = code\n  \t\t\tlet countdown = setInterval(() => {\n  \t\t\t\tif (seconds > 0) {\n  \t\t\t\t\tthis.ruleForm.btnText = seconds + \"s后获取\";\n  \t\t\t\t\t--seconds;\n  \t\t\t\t} else {\n  \t\t\t\t\tthis.ruleForm.btnText = \"获取验证码\";\n  \t\t\t\t\tthis.ruleForm.disabled = false;\n  \t\t\t\t\tclearInterval(countdown);\n  \t\t\t\t}\n  \t\t\t}, 1000);\n\n  \t\t},\n  \t\tsubmitForm(formName) {\n  \t\t\tconst requestData = this.ruleForm\n  \t\t\tthis.$refs.ruleForm.validate(valid => {\n  \t\t\t\tif (valid) {\n  \t\t\t\t\tforgetPwd({\n  \t\t\t\t\t\taccount: requestData.account,\n  \t\t\t\t\t\tcaptcha:requestData.captcha,\n  \t\t\t\t\t\tpassword:requestData.pass\n  \t\t\t\t\t}).then(res => {\n  \t\t\t\t\t\tconsole.log(\"忘记密码\");\n  \t\t\t\t\t\tif (this.$route.query.redirect) { //如果存在参数\n  \t\t\t\t\t\t\tthis.$message.success(\"修改成功\")\n  \t\t\t\t\t\t\tlet redirect = this.$route.query.redirect\n  \t\t\t\t\t\t\tthis.$router.replace(redirect) //则跳转至进入登录页前的路由\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tthis.$router.replace('/') //否则跳转至首页\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t})\n  \t\t\t\t}\n  \t\t\t})\n\n\n  \t\t},\n  \t\tresetForm(formName) {\n  \t\t\tthis.$refs[formName].resetFields();\n  \t\t},\n  \t},\n  };\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userCenter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./userCenter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userCenter.vue?vue&type=template&id=17bbc742&\"\nimport script from \"./userCenter.vue?vue&type=script&lang=js&\"\nexport * from \"./userCenter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_v","staticRenderFns","data","checkphone","rule","value","callback","Error","isCellPhone","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","account","btnText","disabled","rules","required","validator","trigger","captcha","message","methods","val","test","bindforgetSendCode","requestData","errorMessage","console","log","$message","type","then","res","setTimeout","doLoop","seconds","countdown","setInterval","clearInterval","submitForm","formName","validate","valid","forgetPwd","password","$route","query","redirect","success","$router","replace","resetForm","resetFields","component"],"sourceRoot":""}